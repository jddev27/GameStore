@page "/editgame"
@page "/editgame/{id:int}"
@rendermode InteractiveServer

@inject NavigationManager NavigationManager
@inject GamesClient GameClient
@inject GenreClient GenreClient

<PageTitle>@title</PageTitle>
<h3>@title</h3>
@if (genres is null || game is null)
{
    <p>
        <em>Loading .....</em>
    </p>
}
else
{
    <div class="row">
        <div class="col-md-4">
            <EditForm Model="@game" FormName="editGame" OnValidSubmit="HandleSubmit">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="mb-3">
                    <label for="name" class="form-label">Name:</label>
                    <InputText id="name" @bind-Value="game.Name" class="form-control" aria-describedby="name"/>
                    <ValidationMessage For="() => game.Name"></ValidationMessage>
                </div>
                <div class="mb-3">
                    <label for="genre" class="form-label">Genre:</label>
                    <InputSelect id="genre" @bind-Value="game.GenreId" class="form-select" aria-describedby="genre">
                        <option value="">Select Value</option>
                        @foreach (var genre in genres)
                        {
                            <option value="@genre.Id">@genre.Name</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="() => game.GenreId"></ValidationMessage>
                </div>
                <div class="mb-3">
                    <label for="price" class="form-label">Price:</label>
                    <InputNumber id="price" @bind-Value="game.Price" class="form-control" aria-describedby="price"/>
                    <ValidationMessage For="() => game.Price"></ValidationMessage>
                </div>
                <div class="mb-3">
                    <label for="releaseDate" class="form-label">Release Dat:</label>
                    <InputDate id="releaseDate" @bind-Value="game.ReleaseDate" class="form-control" aria-describedby="releaseDate"/>
                </div>
                <button type="submit" class="btn btn-primary">Save</button>
                <a role="button" href="/" class="btn btn-secondary">Cancel</a>
            </EditForm>
        </div>
    </div>
}


@code {

    [Parameter]
    public int? Id { get; set; }   

    [SupplyParameterFromForm]
    private GameDetails? game { get; set; }
    
    private Genre[]? genres;

    private string title = string.Empty;

    protected override void OnParametersSet()
    {
        //Checks if game was already posted
        if (game is not null)
        {
            return;
        }
        
        if (Id is not null)
        {
            game = GameClient.GetGameById(Id.Value);
            title = $"Edit {game.Name}";
        }
        else
        {
            game = new()
            {
                Name = string.Empty,
                ReleaseDate = DateOnly.FromDateTime(DateTime.UtcNow)
            };
            title = "New Game";
        }
    }

    protected override void OnInitialized()
    {
        genres = GenreClient.GetGenres();
    }

    private void HandleSubmit()
    {
        ArgumentNullException.ThrowIfNull(game);

        if (Id is null)
        {
            GameClient.AddGame(game);
        }
        else
        {
            game.Id = Id.Value;
            GameClient.UpdateGame(game);
        }
        

        NavigationManager.NavigateTo("/");
    }

}